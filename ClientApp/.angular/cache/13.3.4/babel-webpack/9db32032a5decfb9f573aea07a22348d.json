{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/members.service.\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../add-update-member/add-update-member.component\";\n\nfunction NavMenuComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function NavMenuComponent_div_3_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.deleteMember();\n    });\n    i0.ɵɵtext(2, \"Delete Member\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function NavMenuComponent_div_3_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.updateMemberRequest();\n    });\n    i0.ɵɵtext(4, \"Update Member\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"selectedRow\": a0\n  };\n};\n\nfunction NavMenuComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\", 10);\n    i0.ɵɵlistener(\"click\", function NavMenuComponent_tr_20_Template_tr_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const member_r6 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.setSelectRow(member_r6);\n    });\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const member_r6 = ctx.$implicit;\n    const i_r7 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, member_r6.id == ctx_r1.selectRowId));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r7 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(member_r6.firstName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(member_r6.lastName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(member_r6.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(member_r6.phone);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(member_r6.address);\n  }\n}\n\nfunction NavMenuComponent_app_add_update_member_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-add-update-member\", 11);\n    i0.ɵɵlistener(\"memberDataChange\", function NavMenuComponent_app_add_update_member_21_Template_app_add_update_member_memberDataChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.selctedMember = $event;\n    })(\"onMemberDataUpdated\", function NavMenuComponent_app_add_update_member_21_Template_app_add_update_member_onMemberDataUpdated_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.onUpdateMemberDetails($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"memberData\", ctx_r2.selctedMember);\n  }\n}\n\nconst _c1 = function (a0) {\n  return {\n    \"margin-bottom \": a0\n  };\n};\n\nexport let NavMenuComponent = /*#__PURE__*/(() => {\n  class NavMenuComponent {\n    constructor(memberService, router, fb) {\n      this.memberService = memberService;\n      this.router = router;\n      this.fb = fb;\n      this.showdonors = false;\n      this.showtopdonors = false;\n      this.showlocation = false;\n      this.allMembers = [];\n      this.topdonorarray = [];\n      this.email = '';\n      this.memberForm = new FormGroup({});\n      this.isUpdateEnbled = false;\n      this.displayStyle = \"none\";\n    }\n\n    ngOnInit() {\n      sessionStorage.setItem('status', 'on_page'); //taking email from local storage and set in session storage\n      //sessionStorage.setItem('email', window.localStorage.getItem('email'));\n\n      this.getallMembers(); //this.email = sessionStorage.getItem('email');\n    }\n\n    getallMembers() {\n      //making other false \n      this.showdonors = true; //set true and display\n\n      this.memberService.getAllMembers().subscribe(res => {\n        console.log(res);\n        this.allMembers = res;\n      });\n    }\n\n    setSelectRow(row) {\n      this.selectRowId = row.id;\n    }\n\n    updateMemberRequest() {\n      var selctedMember = this.allMembers.find(rec => rec.id == this.selectRowId);\n\n      if (selctedMember != null) {\n        //this.buildMemberForm(selctedMember);\n        //this.isUpdateEnbled = true;\n        this.selectedMemberData = selctedMember;\n      }\n    }\n\n    onUpdateMemberDetails(updatedData) {\n      console.log(updatedData);\n      this.isUpdateEnbled = false;\n    }\n\n    deleteMember() {\n      if (this.selectRowId) {\n        if (confirm(\"Are you sure to delete\")) {\n          this.memberService.deleteMembers(this.selectRowId).subscribe(data => {\n            if (data) {\n              this.allMembers = this.allMembers.filter(rec => rec.id !== this.selectRowId);\n              this.selectRowId = null;\n            }\n          });\n        }\n      }\n    } //for Logout\n\n\n    Logout() {\n      sessionStorage.setItem('logout', 'yes');\n      this.router.navigate(['home']);\n    }\n\n    buildMemberForm(data) {\n      this.memberForm = this.fb.group({\n        firstName: [data.firstName, Validators.compose([Validators.required])],\n        lastName: [data.lastName, Validators.compose([Validators.required])],\n        phone: [data.phone, Validators.compose([Validators.required])],\n        email: [data.email, Validators.compose([Validators.required, Validators.email])],\n        address: [data.address]\n      });\n    }\n\n  }\n\n  NavMenuComponent.ɵfac = function NavMenuComponent_Factory(t) {\n    return new (t || NavMenuComponent)(i0.ɵɵdirectiveInject(i1.MemberService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n\n  NavMenuComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NavMenuComponent,\n    selectors: [[\"app-nav-menu\"]],\n    decls: 22,\n    vars: 6,\n    consts: [[1, \"col-11\", \"margin-auto\", 2, \"padding-top\", \"100px\"], [1, \"title\", 3, \"ngClass\"], [\"class\", \"Actions\", 4, \"ngIf\"], [1, \"table\", \"table-hover\", \"mt-10\"], [\"scope\", \"col\"], [\"scope\", \"row\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"memberData\", \"memberDataChange\", \"onMemberDataUpdated\", 4, \"ngIf\"], [1, \"Actions\"], [1, \"btn\", \"btn-danger\", \"mr-20\", 3, \"click\"], [1, \"btn\", \"btn-success\", 3, \"click\"], [\"scope\", \"row\", 3, \"ngClass\", \"click\"], [3, \"memberData\", \"memberDataChange\", \"onMemberDataUpdated\"]],\n    template: function NavMenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n        i0.ɵɵtext(2, \"All Members\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, NavMenuComponent_div_3_Template, 5, 0, \"div\", 2);\n        i0.ɵɵelementStart(4, \"table\", 3)(5, \"thead\")(6, \"tr\")(7, \"th\", 4);\n        i0.ɵɵtext(8, \"S No\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"th\", 4);\n        i0.ɵɵtext(10, \"First Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"th\", 4);\n        i0.ɵɵtext(12, \"Last Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"th\", 4);\n        i0.ɵɵtext(14, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"th\", 4);\n        i0.ɵɵtext(16, \"Phone\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"th\", 4);\n        i0.ɵɵtext(18, \"Address\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(19, \"tbody\");\n        i0.ɵɵtemplate(20, NavMenuComponent_tr_20_Template, 13, 9, \"tr\", 5);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(21, NavMenuComponent_app_add_update_member_21_Template, 1, 1, \"app-add-update-member\", 6);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c1, !ctx.selectRowId));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectRowId);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngForOf\", ctx.allMembers);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selctedMember != null);\n      }\n    },\n    directives: [i4.NgClass, i4.NgIf, i4.NgForOf, i5.AddUpdateMemberComponent],\n    styles: [\"a.navbar-brand[_ngcontent-%COMP%]{white-space:normal;text-align:center;word-break:break-all}html[_ngcontent-%COMP%]{font-size:14px}@media (min-width: 768px){html[_ngcontent-%COMP%]{font-size:16px}}.box-shadow[_ngcontent-%COMP%]{box-shadow:0 .25rem .75rem #0000000d}.selectedRow[_ngcontent-%COMP%]{background-color:#80808033}.mt-10[_ngcontent-%COMP%]{margin-top:10px}.mr-20[_ngcontent-%COMP%]{margin-right:20px}\"]\n  });\n  return NavMenuComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}