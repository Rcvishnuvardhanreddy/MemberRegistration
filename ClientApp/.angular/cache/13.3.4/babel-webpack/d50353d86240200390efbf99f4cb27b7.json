{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../service/user.service.\";\nimport * as i3 from \"@angular/router\";\nexport let NavMenuComponent = /*#__PURE__*/(() => {\n  class NavMenuComponent {\n    constructor(fb, userService, router) {\n      //singin form \n      this.fb = fb;\n      this.userService = userService;\n      this.router = router;\n      this.success = '';\n      this.display = false;\n      this.error = false;\n      this.recoverpassdisplay = false;\n      this.rsigninform = new FormGroup({}); //to signin form\n\n      this.ngoname = '';\n      this.email = '';\n      this.password = ''; // //password recover form\n      // this.recoverform = fb.group({\n      //   email: ['', Validators.compose([Validators.required, Validators.email])],\n      //   password: ['', Validators.compose([Validators.required, Validators.minLength(6)])],\n      //   confirmpassword: ['', Validators.compose([Validators.required, Validators.minLength(6)])]\n      // })\n    }\n\n    ngOnInit() {\n      sessionStorage.setItem('status', 'signin');\n      this.rsigninform = this.fb.group({\n        userName: ['', Validators.compose([Validators.required])],\n        password: ['', Validators.required]\n      });\n    }\n\n    viewAllDonors() {\n      this.router.navigate(['receiver1']);\n    }\n\n    checkData(rsigninform) {\n      // console.log(rsigninform.value)\n      this.display = true;\n      console.log('making display true');\n      this.email = rsigninform.get('userName').value;\n      this.userService.getuser(rsigninform.value).subscribe(res => {\n        console.log(res);\n\n        if (res) {\n          this.error = false; // this.success = \"Login successfully\"\n\n          this.viewAllDonors(); // console.log(this.email);\n\n          localStorage.setItem('email', this.email);\n        } else if (!res) {\n          window.alert(\"Invalid Login Details!!!! Incorrect email or password\"); // this.success = 'Incorrect email or password'\n          // this.error = true;\n        }\n      }, error => {\n        window.alert(\"Invalid Login Details!!!! Incorrect email or password\");\n      });\n      console.log('making display false');\n      this.display = false;\n    }\n\n  }\n\n  NavMenuComponent.ɵfac = function NavMenuComponent_Factory(t) {\n    return new (t || NavMenuComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  NavMenuComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NavMenuComponent,\n    selectors: [[\"app-nav-menu\"]],\n    decls: 15,\n    vars: 2,\n    consts: [[1, \"card\"], [1, \"card-body\"], [3, \"formGroup\"], [1, \"form-group\"], [1, \"col-md-4\"], [\"type\", \"text\", \"formControlName\", \"userName\", 1, \"form-control\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [1, \"form-group\", \"text-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\", \"click\"]],\n    template: function NavMenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2)(3, \"div\", 3)(4, \"label\", 4);\n        i0.ɵɵtext(5, \"User Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 3)(8, \"label\", 4);\n        i0.ɵɵtext(9, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 7)(12, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function NavMenuComponent_Template_button_click_12_listener() {\n          return ctx.checkData(ctx.rsigninform);\n        });\n        i0.ɵɵtext(13, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(14, \"\\u00A0 \");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.rsigninform);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"disabled\", !ctx.rsigninform.valid);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.DefaultValueAccessor, i1.NgControlStatus],\n    styles: [\"a.navbar-brand[_ngcontent-%COMP%]{white-space:normal;text-align:center;word-break:break-all}html[_ngcontent-%COMP%]{font-size:14px}@media (min-width: 768px){html[_ngcontent-%COMP%]{font-size:16px}}.box-shadow[_ngcontent-%COMP%]{box-shadow:0 .25rem .75rem #0000000d}\"]\n  });\n  return NavMenuComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}